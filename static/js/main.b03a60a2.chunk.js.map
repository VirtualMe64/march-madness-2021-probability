{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","console","log","fetch","then","res","json","result","message","Object","keys","length","out","gonzagaOverall","forecasts","mens","teams","filter","x","team_name","rd7_win","uclaOverall","baylorOverall","houstonOverall","scOverall","womens","arizonaBeatsUConn","games","team1","round","arizonaBeatsUConnChance","live_prob","pregame_prob","stanfordBeatsSouthCarolina","stanfordBeatsSouthCarolinaChance","push","name","prob","win_probs","sort","a","b","map","toFixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAkEeA,MA/Df,WAAgB,IAAD,EACaC,mBAAS,MADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,oBAAS,GAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGaJ,mBAAS,IAHtB,mBAGNK,EAHM,KAGCC,EAHD,KA+Cb,GAvCAC,qBAAU,WACRC,QAAQC,IAAI,iBACZC,MAAM,2EACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCV,GAAY,GACZE,EAASQ,MAKX,SAACb,GACCG,GAAY,GACZF,EAASD,QAGd,IAsBCA,EACF,OAAO,0CAAaA,EAAMc,WACrB,GAAKZ,GAA0C,IAA9Ba,OAAOC,KAAKZ,GAAOa,OAEpC,CACL,IAAMJ,EAzBU,WAChB,IAAIK,EAAM,GACJC,EAAiBf,EAAMgB,UAAUC,KAAKC,MAAMC,QAAO,SAACC,GAAD,MAAuB,YAAhBA,EAAEC,aAAyB,GAAGC,QACxFC,EAAcvB,EAAMgB,UAAUC,KAAKC,MAAMC,QAAO,SAACC,GAAD,MAAuB,SAAhBA,EAAEC,aAAsB,GAAGC,QAClFE,EAAgBxB,EAAMgB,UAAUC,KAAKC,MAAMC,QAAO,SAACC,GAAD,MAAuB,WAAhBA,EAAEC,aAAwB,GAAGC,QACtFG,EAAiBzB,EAAMgB,UAAUC,KAAKC,MAAMC,QAAO,SAACC,GAAD,MAAuB,YAAhBA,EAAEC,aAAyB,GAAGC,QACxFI,EAAY1B,EAAMgB,UAAUW,OAAOT,MAAMC,QAAO,SAACC,GAAD,MAAuB,mBAAhBA,EAAEC,aAAgC,GAAGC,QAC5FM,EAAoB5B,EAAM6B,MAAMF,OAAOR,QAAO,SAACC,GAAD,MAAmB,YAAZA,EAAEU,OAAmC,IAAZV,EAAEW,SAAa,GAC7FC,EAA0D,OAAhCJ,EAAkBK,UAAqBL,EAAkBK,UAAYL,EAAkBM,aACjHC,EAA6BnC,EAAM6B,MAAMF,OAAOR,QAAO,SAACC,GAAD,MAAmB,mBAAZA,EAAEU,OAA0C,IAAZV,EAAEW,SAAa,GAC7GK,EAA4E,OAAzCD,EAA2BF,UAAqBE,EAA2BF,UAAYE,EAA2BD,aAO3J,OALApB,EAAIuB,KAAK,CAACC,KAAM,SAAUC,KAAMhB,EAAcG,EAAYM,IAC1DlB,EAAIuB,KAAK,CAACC,KAAM,OAAQC,KAAMxB,EAAkBQ,GAAe,EAAIa,GAAqCtB,EAAI,GAAGyB,OAC/GzB,EAAIuB,KAAK,CAACC,KAAM,QAASC,KAAMf,EAAiBD,EAAca,IAC9DtB,EAAIuB,KAAK,CAACC,KAAM,QAASC,KAAMd,IAExBX,EAQQ0B,GAAYC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEJ,KAAOG,EAAEH,QACrD,OACE,8BACG9B,EAAOmC,KACN,SAACxB,GAAD,OAAO,+BAAKA,EAAEkB,KAAP,MAAyB,IAATlB,EAAEmB,MAAYM,QAAQ,GAAtC,YANb,OAAO,8CCzCIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b03a60a2.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.css';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState({});\n  \n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    console.log(\"api call made\")\n    fetch(\"https://projects.fivethirtyeight.com/march-madness-api/2021/latest.json\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  const win_probs = () => {\n    let out = []\n    const gonzagaOverall = items.forecasts.mens.teams.filter((x) => x.team_name === \"Gonzaga\")[0].rd7_win\n    const uclaOverall = items.forecasts.mens.teams.filter((x) => x.team_name === \"UCLA\")[0].rd7_win\n    const baylorOverall = items.forecasts.mens.teams.filter((x) => x.team_name === \"Baylor\")[0].rd7_win\n    const houstonOverall = items.forecasts.mens.teams.filter((x) => x.team_name === \"Houston\")[0].rd7_win\n    const scOverall = items.forecasts.womens.teams.filter((x) => x.team_name === \"South Carolina\")[0].rd7_win\n    const arizonaBeatsUConn = items.games.womens.filter((x) => x.team1 === \"Arizona\" && x.round === 5)[0]\n    const arizonaBeatsUConnChance = arizonaBeatsUConn.live_prob !== null ? arizonaBeatsUConn.live_prob : arizonaBeatsUConn.pregame_prob\n    const stanfordBeatsSouthCarolina = items.games.womens.filter((x) => x.team1 === \"South Carolina\" && x.round === 5)[0]\n    const stanfordBeatsSouthCarolinaChance = stanfordBeatsSouthCarolina.live_prob !== null ? stanfordBeatsSouthCarolina.live_prob : stanfordBeatsSouthCarolina.pregame_prob\n\n    out.push({name: \"Besser\", prob: uclaOverall * scOverall * arizonaBeatsUConnChance})\n    out.push({name: \"Dave\", prob: gonzagaOverall + (uclaOverall * (1 - stanfordBeatsSouthCarolinaChance)) - out[0].prob})\n    out.push({name: \"Sammy\", prob: baylorOverall + (uclaOverall * stanfordBeatsSouthCarolinaChance)})\n    out.push({name: \"Andie\", prob: houstonOverall})\n\n    return out\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded || Object.keys(items).length === 0) {\n    return <div>Loading...</div>;\n  } else {\n    const result = win_probs().sort((a, b) => b.prob - a.prob)\n    return (\n      <div>\n        {result.map(\n          (x) => <h1>{x.name}: {(x.prob * 100).toFixed(2)}%</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}